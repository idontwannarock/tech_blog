<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>practice on Howard Tech Note</title>
    <link>https://blog.idontwannarock.me/categories/practice/</link>
    <description>Recent content in practice on Howard Tech Note</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This website by Howard Wang is licensed under a Creative Common Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Fri, 15 Sep 2017 10:27:28 +0800</lastBuildDate>
    <atom:link href="https://blog.idontwannarock.me/categories/practice/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>4th Practice: Twitter Clone</title>
      <link>https://blog.idontwannarock.me/2017/09/twitter_clone/</link>
      <pubDate>Fri, 15 Sep 2017 10:27:28 +0800</pubDate>
      <guid>https://blog.idontwannarock.me/2017/09/twitter_clone/</guid>
      <description>第四個目標 練習 PHP、MySQL 跟 MVC，因為 Bootstrap 很方便，所以 HTML 跟 CSS 就這樣吧！廠廠~&#xA;作品：史上最簡陋 Twitter 參考：這參考太多了，只能說各種參考 orz 原始碼：可以參考 我的Github 還是要先講一下，這並不是我憑空寫出來的作品，是跟著 Udemy 網路課程教學作出來的。&#xA;遇到困難 對自己智商產生質疑 真的是這樣，之所以這麼廢的東西還能作這麼久，事後檢討的結果，絕大多數時間都浪費在因為智商太低產生的各種製造障礙，簡稱製障問題上。&#xA;譬如說出現什麼 404 或 500 錯誤訊息，花了三個多小時觀看 stackoverflow 上高手討論，最後發現是 PHP 某一行少加了一個 ;，當天直接氣到作不下去之類的…&#xA;debug 作這個真心受教了，要馬每一步都先作測試，要馬就要會查 bug，人生就是要接受 bug 的出現，沒 bug 絕對是陰德值爆滿。&#xA;所以我目前領悟到的順序是：&#xA;先查 code 有沒有漏加什麼 ; 或 ,或者哪裡括號沒關好，這些出現的頻率超乎你想像，即使有 autocomplete 功能也是一樣 再來用 Chrome 的 Inspect 或 Firefox 的 Inspector 來查錯誤訊息，運氣好就會跟你說你程式碼哪一行有問題 還找不到，先不要急著 google，先查 Log！先查 Log！先查 Log！很重要，所以講三次。通常 Log 也會跟你講執行到哪一行有問題 最後真的都不行，再拿錯誤訊息去拜 google 大神 以上是我的切身之痛，其他的難點在這兩個困難底下，都已經不再重要…喔不是啦，還是補充一個。&#xA;AJAX 不太確定這算不算常識，但大家在使用 jQuery+AJAX 的時候要注意 jQuery 的版本，請不要用到 slim 版的喔， jQuery slim 版把 AJAX 功能拿掉了，所以最起碼要用 minified 或更完整的版本，切記切記！</description>
    </item>
    <item>
      <title>3rd Practice: Click Click Ben</title>
      <link>https://blog.idontwannarock.me/2017/09/click_click_ben/</link>
      <pubDate>Fri, 15 Sep 2017 10:11:46 +0800</pubDate>
      <guid>https://blog.idontwannarock.me/2017/09/click_click_ben/</guid>
      <description>第三個目標 練習 JavaScript 跟 random() 函數。&#xA;作品：Click Click Ben 參考：大帥哥 Ben Hsieh ~ 遇到困難 帥哥阿 Ben 照片太難挑 這是我製作這個作品中碰到最大的困難！太多太帥了，我無法選擇！！我的媽！！！誰來救救我！！！！&#xA;照片亂數出現位置及亂數間隔時間 其實這個問題我之前就有學過，所以這邊大概紀錄一下作法。&#xA;先用 JavaScript 的 Math.random() 來亂數產生 0-1 的浮點數，然後為了適應各種大小的視窗，要乘上 document.documentElement.clientHeight 或 document.documentElement.clientWidth 來亂數產生要往右或往下多少 px 的數字。&#xA;然後用 document.getElementById(&amp;quot;id&amp;quot;).style.top 或 document.getElementById(&amp;quot;id&amp;quot;).style.left 來設定位置。&#xA;亂數間隔時間則用 setTimeout() 來作，記得括號的兩個參數要用逗點分隔，第一個參數是暫停後要執行的程式，第二個是暫停的時間，單位是千分之一秒。&#xA;控制照片出現或消失 原本想都用 JavaScript 控制，但發現直接寫好所有 HTML+CSS 後，用 display: block; 跟 display: none; 來控制最方便。&#xA;控制次數 這也沒什麼好說的，只是做個記錄。&#xA;最基礎的做法就是設一個變數，然後用 if 判斷來控制次數。&#xA;控制次數感覺可以用 for 或 while loop 來寫，但中間要卡一個按的功能，不知道能不能行？</description>
    </item>
    <item>
      <title>2nd Practice: Retina Morning Post</title>
      <link>https://blog.idontwannarock.me/2017/09/retina_morning_post/</link>
      <pubDate>Fri, 15 Sep 2017 09:44:03 +0800</pubDate>
      <guid>https://blog.idontwannarock.me/2017/09/retina_morning_post/</guid>
      <description>第二個目標 練習報紙排版。&#xA;作品：視網膜早報 參考：視網膜 Retina FB圖片 遇到困難 分散對齊 首先遇到的問題就是要讓文字分散對齊，原本以為用 text-align: justify; 可以解決，結果才發現這只能用在超過一行的文字上哭哭。&#xA;然後查到一個 jQuery 解法如下，我大概理解原理，但細節還待研究。簡單來說就是算每個字元平均要佔該 div 多少 width 來作分散對齊。&#xA;$.fn.strech_text = function(){ var elmt = $(this), cont_width = elmt.width(), txt = elmt.html(), one_line = $(&amp;#39;&amp;#39; + txt + &amp;#39;&amp;#39;), nb_char = elmt.text().length, spacing = cont_width/nb_char, txt_width; elmt.html(one_line); txt_width = one_line.width(); if (txt_width &amp;lt; cont_width){ var char_width = txt_width/nb_char, ltr_spacing = spacing - char_width + (spacing - char_width)/nb_char; one_line.css({&amp;#39;letter-spacing&amp;#39;: ltr_spacing}); } else { one_line.</description>
    </item>
    <item>
      <title>1st Practice: Click Click Boom</title>
      <link>https://blog.idontwannarock.me/2017/09/click_click_boom/</link>
      <pubDate>Fri, 15 Sep 2017 07:36:23 +0800</pubDate>
      <guid>https://blog.idontwannarock.me/2017/09/click_click_boom/</guid>
      <description>第一個目標 寫個簡單作品來練習 HTML 跟 CSS&#xA;作品：Click Click Boom 黑白版本 粉紅大理石版本 黑色大理石版本 遇到困難 置中 左右置中很容易，但上下置中就麻煩了，還要隨瀏覽器視窗大小變動就更麻煩。&#xA;最後在 stackoverflow 查到一種解法，就是先設定 position: absolute;，然後 top、bottom、left、right 都設 0，再用 margin: 0; 來自動對齊。&#xA;套框 因為想要使用 HTML+CSS 作套框而不是用畫去背圖的方式，這真的殺死很多腦筋，內部框跟文字怎麼排都無法置中，對，又是無法上下置中，用 text-align 只能左右置中，vertical-align 完全不理我。&#xA;最後又是 stackoverflow 查到解法，要用 CSS3 的新 property，display: flex; 來解，然後設定 align-item: center; 跟 justify-content: center; 來上下左右置中，但當然衍伸出下個問題。&#xA;相容 瀏覽器太多種，新舊版本對 HTML5 或 CSS3 相容度又不一致，真的會搞死，實務上難道也是只能靠經驗？或出問題再來修改嗎？還是有更合理的作法？&#xA;最後是上 w3schools 一項一項 property 查相容再加相容敘述 -webkit- 或 -moz- 來解決。&#xA;iOS相容 這個真的超哭，我整個都做完了，就只有在 iOS 裝置上，按鈕按不下去！&#xA;我先是想說應該是 transform 可能不相容，所以一樣查了 w3schools 加上相容敘述，結果還是不行！</description>
    </item>
    <item>
      <title>實作簡單登入會員系統 (1)</title>
      <link>https://blog.idontwannarock.me/2017/09/login_signup_function_1/</link>
      <pubDate>Mon, 11 Sep 2017 07:11:59 +0800</pubDate>
      <guid>https://blog.idontwannarock.me/2017/09/login_signup_function_1/</guid>
      <description>這篇文章是初學的時候撰寫的，其中一些觀念並不正確，步驟也可能因為更新或觀念問題而不適用或者多餘，此篇文章僅為留做紀錄&#xA;學習目標 實作簡單會員系統，有加入會員、登入、登出 cookie 防範 SQL Injection+XSS hash 密碼 學習內容 構思 坦白說，我有自學過一點點前後端的 Udemy 網路課程，所以前端的部分，簡單的 HTML, CSS, Javascript, jQuery 我還可以，大概是不會寫也可以谷哥看別人怎麼寫的程度。後端也是學過簡單的 PHP 跟 MySQL 這樣。所以後面的說明很可能會省略很多基礎，而只記錄我不太會或不太熟的部分。&#xA;關於會員系統，Udemy 課程的老師其實有教過這個部分，但當時似懂非懂，幾乎就是 copy 老師的程式碼，糊里糊塗就寫出來，PHP 跟 MySQL 的部分一片模糊，所以先來嘗試自己重新寫一遍，不行再來找找看網路教學。&#xA;要寫登入登出的功能，我第一個想到就是要用 HTML 的 form 先做三個 input 跟一個 button，若要串接資料庫，應該還要再作一個 button 切換 Sign Up 跟 Login 畫面來作區別。預計應該要用 jQuery 控制切換 Sign Up/Login 的功能。&#xA;然後後端邏輯應該就是先作 Sign Up/Login 資料的驗證部分，用 ajax 傳輸資料到後端，檢查輸入的 username、email 跟 password 是否空白、格式是否正確以及是否重複，用 echo 輸出錯誤提示訊息給前端。&#xA;接著作 Sign Up 部分，接著剛剛驗證完資料正確後，檢查資料庫有無重複資料後，再把 username、email 跟 password 存進資料庫。</description>
    </item>
  </channel>
</rss>

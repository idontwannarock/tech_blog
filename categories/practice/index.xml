<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Practice on Howard Tech Note</title>
    <link>https://blog.idontwannarock.me/categories/practice/</link>
    <description>Recent content in Practice on Howard Tech Note</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>This website by Howard Wang is licensed under a Creative Common Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Fri, 15 Sep 2017 10:27:28 +0800</lastBuildDate>
    <atom:link href="https://blog.idontwannarock.me/categories/practice/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>4th Practice: Twitter Clone</title>
      <link>https://blog.idontwannarock.me/2017/09/twitter_clone/</link>
      <pubDate>Fri, 15 Sep 2017 10:27:28 +0800</pubDate>
      <guid>https://blog.idontwannarock.me/2017/09/twitter_clone/</guid>
      <description>&lt;h1 id=&#34;第四個目標&#34;&gt;第四個目標&lt;/h1&gt;&#xA;&lt;p&gt;練習 PHP、MySQL 跟 MVC，因為 Bootstrap 很方便，所以 HTML 跟 CSS 就這樣吧！廠廠~&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;作品：&lt;a href=&#34;https://goo.gl/PVUtXQ&#34;&gt;史上最簡陋 Twitter&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;參考：這參考太多了，只能說各種參考 orz&lt;/li&gt;&#xA;&lt;li&gt;原始碼：可以參考 &lt;a href=&#34;https://github.com/idontwannarock&#34;&gt;我的Github&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;還是要先講一下，這並不是我憑空寫出來的作品，是跟著 Udemy 網路課程教學作出來的。&lt;/p&gt;&#xA;&lt;h1 id=&#34;遇到困難&#34;&gt;遇到困難&lt;/h1&gt;&#xA;&lt;h2 id=&#34;對自己智商產生質疑&#34;&gt;對自己智商產生質疑&lt;/h2&gt;&#xA;&lt;p&gt;真的是這樣，之所以這麼廢的東西還能作這麼久，事後檢討的結果，絕大多數時間都浪費在因為智商太低產生的各種製造障礙，簡稱製障問題上。&lt;/p&gt;&#xA;&lt;p&gt;譬如說出現什麼 404 或 500 錯誤訊息，花了三個多小時觀看 stackoverflow 上高手討論，最後發現是 PHP 某一行少加了一個 &lt;code&gt;;&lt;/code&gt;，當天直接氣到作不下去之類的…&lt;/p&gt;&#xA;&lt;h2 id=&#34;debug&#34;&gt;debug&lt;/h2&gt;&#xA;&lt;p&gt;作這個真心受教了，要馬每一步都先作測試，要馬就要會查 bug，人生就是要接受 bug 的出現，沒 bug 絕對是陰德值爆滿。&lt;/p&gt;&#xA;&lt;p&gt;所以我目前領悟到的順序是：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;先查 code 有沒有漏加什麼 &lt;code&gt;;&lt;/code&gt; 或 &lt;code&gt;,&lt;/code&gt;或者哪裡括號沒關好，這些出現的頻率超乎你想像，即使有 autocomplete 功能也是一樣&lt;/li&gt;&#xA;&lt;li&gt;再來用 Chrome 的 &lt;code&gt;Inspect&lt;/code&gt; 或 Firefox 的 &lt;code&gt;Inspector&lt;/code&gt; 來查錯誤訊息，運氣好就會跟你說你程式碼哪一行有問題&lt;/li&gt;&#xA;&lt;li&gt;還找不到，先不要急著 google，先查 Log！先查 Log！先查 Log！很重要，所以講三次。通常 Log 也會跟你講執行到哪一行有問題&lt;/li&gt;&#xA;&lt;li&gt;最後真的都不行，再拿錯誤訊息去拜 google 大神&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;以上是我的切身之痛，其他的難點在這兩個困難底下，都已經不再重要…喔不是啦，還是補充一個。&lt;/p&gt;&#xA;&lt;h2 id=&#34;ajax&#34;&gt;AJAX&lt;/h2&gt;&#xA;&lt;p&gt;不太確定這算不算常識，但大家在使用 jQuery+AJAX 的時候要注意 jQuery 的版本，請不要用到 slim 版的喔， jQuery slim 版把 AJAX 功能拿掉了，所以最起碼要用 minified 或更完整的版本，切記切記！&lt;/p&gt;</description>
    </item>
    <item>
      <title>3rd Practice: Click Click Ben</title>
      <link>https://blog.idontwannarock.me/2017/09/click_click_ben/</link>
      <pubDate>Fri, 15 Sep 2017 10:11:46 +0800</pubDate>
      <guid>https://blog.idontwannarock.me/2017/09/click_click_ben/</guid>
      <description>&lt;h1 id=&#34;第三個目標&#34;&gt;第三個目標&lt;/h1&gt;&#xA;&lt;p&gt;練習 JavaScript 跟 &lt;code&gt;random()&lt;/code&gt; 函數。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;作品：&lt;a href=&#34;https://goo.gl/sgAjR3&#34;&gt;Click Click Ben&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;參考：大帥哥 &lt;a href=&#34;https://www.facebook.com/ben.shieh.3&#34;&gt;Ben Hsieh&lt;/a&gt; ~&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;遇到困難&#34;&gt;遇到困難&lt;/h1&gt;&#xA;&lt;h2 id=&#34;帥哥阿-ben-照片太難挑&#34;&gt;帥哥阿 Ben 照片太難挑&lt;/h2&gt;&#xA;&lt;p&gt;這是我製作這個作品中碰到最大的困難！太多太帥了，我無法選擇！！我的媽！！！誰來救救我！！！！&lt;/p&gt;&#xA;&lt;h2 id=&#34;照片亂數出現位置及亂數間隔時間&#34;&gt;照片亂數出現位置及亂數間隔時間&lt;/h2&gt;&#xA;&lt;p&gt;其實這個問題我之前就有學過，所以這邊大概紀錄一下作法。&lt;/p&gt;&#xA;&lt;p&gt;先用 JavaScript 的 &lt;code&gt;Math.random()&lt;/code&gt; 來亂數產生 0-1 的浮點數，然後為了適應各種大小的視窗，要乘上 &lt;code&gt;document.documentElement.clientHeight&lt;/code&gt; 或 &lt;code&gt;document.documentElement.clientWidth&lt;/code&gt; 來亂數產生要往右或往下多少 px 的數字。&lt;/p&gt;&#xA;&lt;p&gt;然後用 &lt;code&gt;document.getElementById(&amp;quot;id&amp;quot;).style.top&lt;/code&gt; 或 &lt;code&gt;document.getElementById(&amp;quot;id&amp;quot;).style.left&lt;/code&gt; 來設定位置。&lt;/p&gt;&#xA;&lt;p&gt;亂數間隔時間則用 &lt;code&gt;setTimeout()&lt;/code&gt; 來作，記得括號的兩個參數要用逗點分隔，第一個參數是暫停後要執行的程式，第二個是暫停的時間，單位是千分之一秒。&lt;/p&gt;&#xA;&lt;h2 id=&#34;控制照片出現或消失&#34;&gt;控制照片出現或消失&lt;/h2&gt;&#xA;&lt;p&gt;原本想都用 JavaScript 控制，但發現直接寫好所有 HTML+CSS 後，用 &lt;code&gt;display: block;&lt;/code&gt; 跟 &lt;code&gt;display: none;&lt;/code&gt; 來控制最方便。&lt;/p&gt;&#xA;&lt;h2 id=&#34;控制次數&#34;&gt;控制次數&lt;/h2&gt;&#xA;&lt;p&gt;這也沒什麼好說的，只是做個記錄。&lt;/p&gt;&#xA;&lt;p&gt;最基礎的做法就是設一個變數，然後用 &lt;code&gt;if&lt;/code&gt; 判斷來控制次數。&lt;/p&gt;&#xA;&lt;p&gt;控制次數感覺可以用 &lt;code&gt;for&lt;/code&gt; 或 &lt;code&gt;while&lt;/code&gt; loop 來寫，但中間要卡一個按的功能，不知道能不能行？&lt;/p&gt;</description>
    </item>
    <item>
      <title>2nd Practice: Retina Morning Post</title>
      <link>https://blog.idontwannarock.me/2017/09/retina_morning_post/</link>
      <pubDate>Fri, 15 Sep 2017 09:44:03 +0800</pubDate>
      <guid>https://blog.idontwannarock.me/2017/09/retina_morning_post/</guid>
      <description>&lt;h1 id=&#34;第二個目標&#34;&gt;第二個目標&lt;/h1&gt;&#xA;&lt;p&gt;練習報紙排版。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;作品：&lt;a href=&#34;https://goo.gl/ZEByGt&#34;&gt;視網膜早報&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;參考：&lt;a href=&#34;https://www.facebook.com/EYECTVretina/&#34;&gt;視網膜 Retina&lt;/a&gt; &lt;a href=&#34;https://goo.gl/iy9tFF&#34;&gt;FB圖片&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;遇到困難&#34;&gt;遇到困難&lt;/h1&gt;&#xA;&lt;h2 id=&#34;分散對齊&#34;&gt;分散對齊&lt;/h2&gt;&#xA;&lt;p&gt;首先遇到的問題就是要讓文字分散對齊，原本以為用 &lt;code&gt;text-align: justify;&lt;/code&gt; 可以解決，結果才發現這只能用在超過一行的文字上哭哭。&lt;/p&gt;&#xA;&lt;p&gt;然後查到一個 jQuery 解法如下，我大概理解原理，但細節還待研究。簡單來說就是算每個字元平均要佔該 &lt;code&gt;div&lt;/code&gt; 多少 &lt;code&gt;width&lt;/code&gt; 來作分散對齊。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$.fn.strech_text &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;function&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;var&lt;/span&gt; elmt &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; $(&lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cont_width &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; elmt.width(),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    txt &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; elmt.html(),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    one_line &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; $(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; txt &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;),&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    nb_char &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; elmt.text().length,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    spacing &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; cont_width&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;nb_char,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    txt_width;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    elmt.html(one_line);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    txt_width &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; one_line.width();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; (txt_width &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt; cont_width){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;var&lt;/span&gt; char_width &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; txt_width&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;nb_char,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ltr_spacing &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; spacing &lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt; char_width &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; (spacing &lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt; char_width)&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;nb_char;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        one_line.css({&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;letter-spacing&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; ltr_spacing});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } &lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        one_line.contents().unwrap();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        elmt.addClass(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;justify&amp;#39;&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;};&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;document&lt;/span&gt;).ready(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;function&lt;/span&gt; () {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;.stretch&amp;#39;&lt;/span&gt;).each(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;function&lt;/span&gt;(){&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $(&lt;span style=&#34;color:#ff79c6&#34;&gt;this&lt;/span&gt;).strech_text();&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    });&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;});&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然後幫各 &lt;code&gt;div&lt;/code&gt; 設定 &lt;code&gt;class=&amp;quot;stretch&amp;quot;&lt;/code&gt;，並且一定要設定 &lt;code&gt;width&lt;/code&gt; 才能算。&lt;/p&gt;</description>
    </item>
    <item>
      <title>1st Practice: Click Click Boom</title>
      <link>https://blog.idontwannarock.me/2017/09/click_click_boom/</link>
      <pubDate>Fri, 15 Sep 2017 07:36:23 +0800</pubDate>
      <guid>https://blog.idontwannarock.me/2017/09/click_click_boom/</guid>
      <description>&lt;h1 id=&#34;第一個目標&#34;&gt;第一個目標&lt;/h1&gt;&#xA;&lt;p&gt;寫個簡單作品來練習 HTML 跟 CSS&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;作品：Click Click Boom&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://goo.gl/vPtbzB&#34;&gt;黑白版本&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://goo.gl/CfT2Ro&#34;&gt;粉紅大理石版本&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://goo.gl/NVdhAk&#34;&gt;黑色大理石版本&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;遇到困難&#34;&gt;遇到困難&lt;/h1&gt;&#xA;&lt;h2 id=&#34;置中&#34;&gt;置中&lt;/h2&gt;&#xA;&lt;p&gt;左右置中很容易，但上下置中就麻煩了，還要隨瀏覽器視窗大小變動就更麻煩。&lt;/p&gt;&#xA;&lt;p&gt;最後在 stackoverflow 查到一種解法，就是先設定 &lt;code&gt;position: absolute;&lt;/code&gt;，然後 &lt;code&gt;top&lt;/code&gt;、&lt;code&gt;bottom&lt;/code&gt;、&lt;code&gt;left&lt;/code&gt;、&lt;code&gt;right&lt;/code&gt; 都設 &lt;code&gt;0&lt;/code&gt;，再用 &lt;code&gt;margin: 0;&lt;/code&gt; 來自動對齊。&lt;/p&gt;&#xA;&lt;h2 id=&#34;套框&#34;&gt;套框&lt;/h2&gt;&#xA;&lt;p&gt;因為想要使用 HTML+CSS 作套框而不是用畫去背圖的方式，這真的殺死很多腦筋，內部框跟文字怎麼排都無法置中，對，又是無法上下置中，用 &lt;code&gt;text-align&lt;/code&gt; 只能左右置中，&lt;code&gt;vertical-align&lt;/code&gt; 完全不理我。&lt;/p&gt;&#xA;&lt;p&gt;最後又是 stackoverflow 查到解法，要用 CSS3 的新 property，&lt;code&gt;display: flex;&lt;/code&gt; 來解，然後設定 &lt;code&gt;align-item: center;&lt;/code&gt; 跟 &lt;code&gt;justify-content: center;&lt;/code&gt; 來上下左右置中，但當然衍伸出下個問題。&lt;/p&gt;&#xA;&lt;h2 id=&#34;相容&#34;&gt;相容&lt;/h2&gt;&#xA;&lt;p&gt;瀏覽器太多種，新舊版本對 HTML5 或 CSS3 相容度又不一致，真的會搞死，實務上難道也是只能靠經驗？或出問題再來修改嗎？還是有更合理的作法？&lt;/p&gt;&#xA;&lt;p&gt;最後是上 &lt;a href=&#34;https://www.w3schools.com/&#34;&gt;w3schools&lt;/a&gt; 一項一項 property 查相容再加相容敘述 &lt;code&gt;-webkit-&lt;/code&gt; 或 &lt;code&gt;-moz-&lt;/code&gt; 來解決。&lt;/p&gt;&#xA;&lt;h2 id=&#34;ios相容&#34;&gt;iOS相容&lt;/h2&gt;&#xA;&lt;p&gt;這個真的超哭，我整個都做完了，就只有在 iOS 裝置上，按鈕按不下去！&lt;/p&gt;&#xA;&lt;p&gt;我先是想說應該是 &lt;code&gt;transform&lt;/code&gt; 可能不相容，所以一樣查了 w3schools 加上相容敘述，結果還是不行！&lt;/p&gt;&#xA;&lt;p&gt;以我的智商真的想不出來惹，最後只能跟阿混求救，大神就是大神，瞬間幫我找出答案，因為 &lt;code&gt;Pseudo class active&lt;/code&gt; 跟 iOS 不相容……&lt;/p&gt;</description>
    </item>
    <item>
      <title>實作簡單登入會員系統 (1)</title>
      <link>https://blog.idontwannarock.me/2017/09/login_signup_function_1/</link>
      <pubDate>Mon, 11 Sep 2017 07:11:59 +0800</pubDate>
      <guid>https://blog.idontwannarock.me/2017/09/login_signup_function_1/</guid>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;這篇文章是初學的時候撰寫的，其中一些觀念並不正確，步驟也可能因為更新或觀念問題而不適用或者多餘，此篇文章僅為留做紀錄&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;學習目標&#34;&gt;學習目標&lt;/h1&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;實作簡單會員系統，有加入會員、登入、登出&lt;/li&gt;&#xA;&lt;li&gt;cookie&lt;/li&gt;&#xA;&lt;li&gt;防範 SQL Injection+XSS&lt;/li&gt;&#xA;&lt;li&gt;hash 密碼&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h1 id=&#34;學習內容&#34;&gt;學習內容&lt;/h1&gt;&#xA;&lt;h2 id=&#34;構思&#34;&gt;構思&lt;/h2&gt;&#xA;&lt;p&gt;坦白說，我有自學過一點點前後端的 Udemy 網路課程，所以前端的部分，簡單的 HTML, CSS, Javascript, jQuery 我還可以，大概是不會寫也可以谷哥看別人怎麼寫的程度。後端也是學過簡單的 PHP 跟 MySQL 這樣。所以後面的說明很可能會省略很多基礎，而只記錄我不太會或不太熟的部分。&lt;/p&gt;&#xA;&lt;p&gt;關於會員系統，Udemy 課程的老師其實有教過這個部分，但當時似懂非懂，幾乎就是 copy 老師的程式碼，糊里糊塗就寫出來，PHP 跟 MySQL 的部分一片模糊，所以先來嘗試自己重新寫一遍，不行再來找找看網路教學。&lt;/p&gt;&#xA;&lt;p&gt;要寫登入登出的功能，我第一個想到就是要用 HTML 的 &lt;code&gt;form&lt;/code&gt; 先做三個 &lt;code&gt;input&lt;/code&gt; 跟一個 &lt;code&gt;button&lt;/code&gt;，若要串接資料庫，應該還要再作一個 &lt;code&gt;button&lt;/code&gt; 切換 Sign Up 跟 Login 畫面來作區別。預計應該要用 jQuery 控制切換 Sign Up/Login 的功能。&lt;/p&gt;&#xA;&lt;p&gt;然後後端邏輯應該就是先作 Sign Up/Login 資料的驗證部分，用 &lt;code&gt;ajax&lt;/code&gt; 傳輸資料到後端，檢查輸入的 &lt;code&gt;username&lt;/code&gt;、&lt;code&gt;email&lt;/code&gt; 跟 &lt;code&gt;password&lt;/code&gt; 是否空白、格式是否正確以及是否重複，用 &lt;code&gt;echo&lt;/code&gt; 輸出錯誤提示訊息給前端。&lt;/p&gt;&#xA;&lt;p&gt;接著作 Sign Up 部分，接著剛剛驗證完資料正確後，檢查資料庫有無重複資料後，再把 &lt;code&gt;username&lt;/code&gt;、&lt;code&gt;email&lt;/code&gt; 跟 &lt;code&gt;password&lt;/code&gt; 存進資料庫。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>

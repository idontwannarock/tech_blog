<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Insert on Howard Tech Note</title>
    <link>https://blog.idontwannarock.dev/tags/insert/</link>
    <description>Recent content in Insert on Howard Tech Note</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <copyright>This website by Howard Wang is licensed under a Creative Common Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Fri, 07 Feb 2025 09:39:10 +0800</lastBuildDate>
    <atom:link href="https://blog.idontwannarock.dev/tags/insert/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>如何在 MySQL 中進行 insert if not exists</title>
      <link>https://blog.idontwannarock.dev/2025/02/how_to_insert_if_not_exists_in_mysql/</link>
      <pubDate>Fri, 07 Feb 2025 09:39:10 +0800</pubDate>
      <guid>https://blog.idontwannarock.dev/2025/02/how_to_insert_if_not_exists_in_mysql/</guid>
      <description>&lt;p&gt;相信很多 Developer 都會真心的 &lt;em&gt;&lt;del&gt;幹譙&lt;/del&gt;&lt;/em&gt; 懷疑為什麼 MySQL 經過這麼多年都沒有 PostgreSQL 的 &lt;code&gt;INSERT … ON DUPLICATE KEY DO NOTHING&lt;/code&gt; 語法，偏偏這真的是一個很常會碰到的使用情境&lt;/p&gt;&#xA;&lt;p&gt;所以接下來探討一些單一 SQL 語法方面可行的做法&lt;/p&gt;&#xA;&lt;h2 id=&#34;準備&#34;&gt;準備&lt;/h2&gt;&#xA;&lt;p&gt;環境為 MySQL server 8.0.37&lt;/p&gt;&#xA;&lt;p&gt;首先建立以下 table (只是為了情境驗證，合理性就先不計較)&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;drop&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;table&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;exists&lt;/span&gt; test_user;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;create&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;table&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;exists&lt;/span&gt; test_user (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    id &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;int&lt;/span&gt; unsigned auto_increment &lt;span style=&#34;color:#ff79c6&#34;&gt;primary&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;key&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    user_id &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;int&lt;/span&gt; unsigned &lt;span style=&#34;color:#ff79c6&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    is_active &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;boolean&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;constraint&lt;/span&gt; uk_user_id_user &lt;span style=&#34;color:#ff79c6&#34;&gt;unique&lt;/span&gt; (user_id)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;) engine &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; innodb charset &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; utf8mb4 &lt;span style=&#34;color:#ff79c6&#34;&gt;collate&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; utf8mb4_0900_ai_ci;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;情境就是要在表中新增一筆 user 紀錄，如果該 user id 已經存在，就不做任何變更&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;每個情境測試前都會重新建立整個 table，以避免其他問題影響測試結果&lt;/p&gt;&#xA;&lt;p&gt;取得 auto increment 數字前，可能需要 &lt;code&gt;analyze table&lt;/code&gt; 以校正數據&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;insert&#34;&gt;&lt;code&gt;insert&lt;/code&gt;&lt;/h2&gt;&#xA;&lt;p&gt;第一個方法就是直接 &lt;code&gt;insert&lt;/code&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
